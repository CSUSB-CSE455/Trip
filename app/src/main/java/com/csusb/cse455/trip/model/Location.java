package com.csusb.cse455.trip.model;

// Location on the map.
public class Location {
    // Position of location in the trip route.
    private int mPosition;
    // Location's unique ID generated by the database.
    private String mId;
    // Trip's label.
    private String mLabel;
    // Trip's description.
    private String mDescription;
    // Trip's latitude.
    private double mLatitude;
    // Trip's longitude.
    private double mLongitude;
    // Indication whether trip is favorite (saved).
    private boolean mFavorite;

    // Default constructor.
    public Location() {}

    // Overloaded constructor.
    public Location(int position, String label, String descr, double lat, double lng, boolean fav) {
        mPosition = position;
        mLabel = label;
        mDescription = descr;
        mLatitude = lat;
        mLongitude = lng;
        mFavorite = fav;
    }

    // Returns position of location in trip's route.
    public int getPosition() {
        return mPosition;
    }

    // Sets position of location in trip's route.
    public void setPosition(int position) {
        mPosition = position;
    }

    // Returns location ID.
    public String getId() {
        return mId;
    }

    // Sets location ID.
    public void setId(String id) {
        this.mId = id;
    }

    // Returns location's label, which is set by the user.
    public String getLabel() {
        return mLabel;
    }

    // Sets location's label.
    public void setLabel(String label) {
        this.mLabel = label;
    }

    // Returns location's description, which is set by the user.
    public String getDescription() {
        return mDescription;
    }

    // Sets location's description.
    public void setDescription(String description) {
        this.mDescription = description;
    }

    // Returns location's latitude.
    public double getLatitude() {
        return mLatitude;
    }

    // Sets location's lattitude.
    public void setLatitude(double latitude) {
        this.mLatitude = latitude;
    }

    // Returns location's longitude.
    public double getLongitude() {
        return mLongitude;
    }

    // Sets location's longitude.
    public void setLongitude(double longitude) {
        this.mLongitude = longitude;
    }

    // Returns whether location is favorite (saved).
    public boolean isFavorite() {
        return mFavorite;
    }

    // Sets location as favorite (the database logic is not performed here; this is simply a flag).
    public void setFavorite(boolean favorite) {
        this.mFavorite = favorite;
    }
}
