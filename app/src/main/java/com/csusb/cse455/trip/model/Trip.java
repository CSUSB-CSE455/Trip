package com.csusb.cse455.trip.model;

import android.media.Image;

import java.util.ArrayList;
import java.util.List;

// User's trip data item.
public class Trip {
    // Trip's unique ID generated by the database.
    private String mId;
    // Trip's unique label created by the user.
    private String mLabel;
    // Trip's description provided by the user.
    private String mDescription;
    // Trip's owner ID.
    private String mOwnerId;
    // Snapshot image, which is a visual overview of the trip.
    private Image mSnapshot;
    // Locations on the trip route (markers/waypoints).
    private List<Location> mLocations;

    // Default constructor.
    public Trip() {
        // To avoid having a null locations list.
        mLocations = new ArrayList<>();
    }

    // Returns trip ID.
    public String getId() {
        return mId;
    }

    // Sets trip ID.
    public void setId(String id) {
        this.mId = id;
    }

    // Gets trip label.
    public String getLabel() {
        return mLabel;
    }

    // Sets trip label.
    public void setLabel(String label) {
        this.mLabel = label;
    }

    // Returns trip description.
    public String getDescription() {
        return mDescription;
    }

    // Sets trip description.
    public void setDescription(String description) {
        this.mDescription = description;
    }

    // Returns owner's id.
    public String getOwnerId() { return mOwnerId; }

    // Sets owner's id.
    public void setOwnerId(String id) { mOwnerId = id; }

    // Returns trip snapshot.
    public Image getSnapshot() { return mSnapshot; }

    // Sets trip snapshot.
    public void setSnapshot(Image snapshot) { mSnapshot = snapshot; }

    // Returns a list of locations/markers/waypoints for the trip route.
    public List<Location> getLocations() { return mLocations; }

    // Sets a list of locations/markers/waypoints for the trip route.
    public void setLocations(List<Location> locations) { mLocations = locations; }

    // Gets a location from the route by its label.
    public Location getLocation(String label) {
        // Try to find a match.
        for (int i = 0; i < mLocations.size(); i++) {
            Location loc = (Location) mLocations.get(i);
            if (loc.getLabel().equals(label)) {
                return loc;
            }
        }
        // No matches were found.
        return null;
    }

    // Gets a location from the route by its id.
    public Location getLocationById(String id) {
        // Try to find a match.
        for (int i = 0; i < mLocations.size(); i++) {
            Location loc = (Location) mLocations.get(i);
            if (loc.getId().equals(id)) {
                return loc;
            }
        }
        // No matches were found.
        return null;
    }

    // Gets a location from the route by its position.
    public Location getLocationByPosition(int position) {
        // Try to find a match.
        for (int i = 0; i < mLocations.size(); i++) {
            Location loc = (Location) mLocations.get(i);
            if (loc.getPosition() == position) {
                return loc;
            }
        }
        // No matches were found.
        return null;
    }
}
